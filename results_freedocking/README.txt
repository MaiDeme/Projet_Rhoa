
Contents vary according to the input:

* If a sequence was provided as input, results.zip will contain a corresponding folder (protein_a for partner A, protein_b for partner B) containing for each chain:
        - the input fasta sequence of the protein (protein_X.fst)
        - the hhsearch outputs in text and html format for each chain (?_protein_X_00_hhsearch.out and ?_protein_X_00_hhsearch.html)
    Additionnaly, there's a file called templates_used.txt that summarises what template structures were used.    

* Input pdb files: receptor pdb file protein_a.pdb (partner A) and ligand pdb file protein_b.pdb (partner B) if given
These are either the input structures provided by the user, or the models built from the sequences provided as input.

* Specific free docking pipeline outputs:
    
    ** With no coevolution map constraints:

        *** Multiple sequence alignment files: protein_a_coMSA.fasta and protein_b_coMSA.fasta (either provided by users or calculated by InterEvDock3 server) if the free docking pipeline is used without coevolution map constraints

        *** Three to five folders of models: InterEvScore_models, soap_pp_models and frodock_models are always outputted and optionally ISC_models and ISCh_models. Each folder contains at most top 50 final models for InterEvScore (classic IES or explicit homology IESh version), SOAP-PP (classic SPP or explicit homology SPPh version), Frodock, Rosetta's Interface Score (ISC) and the ISC in explicit homology version (ISCh).

        *** Three to five scoring output text files (scores_*.txt): a table containing results of the 3-5 scoring methods (1 per file), on 10000 decoys for InterEvScore, SOAP-PP and Frodock (sometimes less than 10000 when the input proteins are small or when constraints are applied) and on 150 decoys for Rosetta's ISC and ISCh

        *** InterEvDock_Top10Consensus.txt: a list of the top 10 consensus models identified by the InterEvDock3 server.

        *** consensus_top5residues.txt: a table containing top 5 residues of each chain which are most likely involved in interface

        *** If any constraints were used, two additional files are present:
            - a user_constraints.txt file containing the constraints that were actually used for docking (i.e. constraints provided by the user, minus any mis-formatted constraint and any constraint involving a residue not present or not exposed in the structure/model)
            - a frodock_constraints.txt file containing one constraint per line, indicating for the receptor (protein a) and/or the ligand (protein b), the residue type, chain and number of the constraint in the pdb (e.g. "VAL B   41"). This file is the direct input to frodockonstraints (from the FRODOCK 2.1 package).

        *** Visualisation script: start_analysis.pml (see Visualisation by Pymol)

        *** the folder 'scripts' is used by start_analysis.pml

        *** dockclust.dat can be used to generate all decoy structures using the Frodock program.


    ** With coevolution map constraints:

        *** user inputs: cmap_seqA.fasta, cmap_seqB.fasta and cmap_coevo.txt

        *** Two folders of models: CMAPnb_models and CMAPscore_models containing the top 10 models respecting the most constraints or with the highest cumulative constraint scores.

        *** Two scoring output text files (scores_*.txt): a table containing results of the 2 scoring methods (1 per file), on all decoys generated by Frodock that respect at least one of the contacts given as constraints. NB: in this case, 2 complexes with the same name listed in the 2 files are not equivalent and reflect decoys from 2 different clustering steps.

        *** 2 frodock .dat files: dockclust_CMAPnb.dat and dockclust_CMAPsco.dat that can be used to generate all decoy structures using the Frodock program.


Visualisation by Pymol:

* The script start_analysis.pml allows to automatically load top 10 models of each scoring method using Pymol. For Linux users, you should move to this folder first before launching "pymol start_analysis.pml"; Windows users only need to double click this script file.

* This script will create 2 individual protein structures colored by conservation score (from less to more conserved: white->yellow->red and white->cyan->blue), and colored by likelihood of interfacial residues (from less to more: white->green), and 30 heterodimeric models colored in conservation shown as cartoon with interfacial residues shown as sticks.


Please cite:

Previous versions of our server are described in:
* InterEvDock2:
Quignot C, Rey J, Yu J, Tuffery P, Guerois R, Andreani J.
InterEvDock2: an expanded server for protein docking using evolutionary and biological information from homology models and multimeric inputs
Nucleic Acids Res. 2018 May 8;44(W1):W542-9.

* InterEvDock:
Yu J, Vavrusa M, Andreani J, Rey, J, Tufféry P, Guerois R.
InterEvDock: A docking server to predict the structure of protein-protein interactions using evolutionary information.
Nucleic Acids Res. 2018 Jul 2; 46(Web Server issue): W408–W416.

This server uses the methodology described in:
Quignot C, Granger P, Chacón P, Guerois R, Andreani J.
Atomic-level evolutionary information improves protein-protein interface scoring
bioRxiv 2020.10.26.355073

This server also uses the following programs:
* InterEvScore program:
Andreani J, Faure G, Guerois R. InterEvScore: a novel coarse-grained interface scoring function using a multi-body statistical potential coupled to evolution. Bioinformatics. 2013 29(14):1742-9.

* FRODOCK2 program:
Ramirez-Aportela E, Lopéz-Blanco JR, Chacón P. 
FRODOCK 2.0: fast protein-protein docking server.
Bioinformatics. 2016;32(15):2386-8.

* SOAP_PP program:
Dong GQ, Fan H, Schneidman-Duhovny D, Webb B, Sali A. 
Optimized atomic statistical potentials: assessment of protein interfaces and loops.
Bioinformatics. 2013;29(24):3158-66.

* Rate4Site Program:
Pupko T, Bell RE, Mayrose I, Glaser F, Ben-Tal N. 
Rate4Site: an algorithmic tool for the identification of functional regions in proteins by surface mapping of evolutionary determinants within their homologues. 
Bioinformatics. 2002; 18 Suppl 1:S71-77.

* Rosetta Interface Score Program (if Rosetta Scoring option was activated):
Lyskov, S. and J. J. Gray 
The RosettaDock server for local protein-protein docking.
Nucleic Acids Res 36(Web Server issue): W233-238.
Chaudhury, S., et al.
Benchmarking and analysis of protein docking performance in Rosetta v3.2.
PLoS One 6(8):e22477.

* OSCAR-star Program (if default "explicit homology scoring" option was activated and/or sequence inputs were given):
Liang S, Zheng D, Zhang C, Standley DM.
Fast and accurate prediction of protein side-chain conformations.
Bioinformatics. 2011 Oct 15;27(20):2913-4.

* Homology search programs (if sequences were provided as input and no template or sequence-template alignment was provided):
Tatusova TA, Madden TL.
BLAST 2 Sequences, a new tool for comparing protein and nucleotide sequences.
FEMS Microbiol Lett. 1999;174(2):247-50.

Remmert M1, Biegert A, Hauser A, Soding J.
HHblits: lightning-fast iterative protein sequence searching by HMM-HMM alignment.
Nat Methods. 2011;9(2):173-5.

Soding J.
Protein homology detection by HMM-HMM comparison.
Bioinformatics. 2005; 21(7):951-60. 

Mafft
Katoh, K. and D. M. Standley
MAFFT multiple sequence alignment software version 7: improvements in performance and usability
Mol Biol Evol 30(4): 772-780.

Proteo3DNet
Postic G, Marcoux J, Reys V, Andreani J, Vandenbrouck Y, Bousquet MP, Mouton-Barbosa E, Cianfériani S, Burlet-Schiltz O, Guerois R, Labesse G, Tufféry P.
Probing Protein Interaction Networks by Combining MS-Based Proteomics and Structural Data Integration.
J. Proteome Res. 2020 Apr 27;19(7):2807-2820.
